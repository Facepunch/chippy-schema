{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "/chippy-schema/schemas/bulletdata.json",
  "title": "SpaceUsurper.BulletData",
  "description": "",
  "type": "object",
  "properties": {
    "disableBulletArchetypeGeneration": {
      "description": "Don't try to generate a BulletArchetype class for this bullet type.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "onStart": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onUpdate": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onHitPlayer": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onHitPixel": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onDestroyPixel": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onHitPart": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onHitPartProtected": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onLifetimeFinished": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onDespawn": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onRemove": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onOutOfBounds": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "onAutoUpdateTargetPlayer": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "bounds": {
      "title": "ScriptFunc<UnityEngine.Rect>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/rect.json"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "onProximity": {
      "$ref": "/chippy-schema/schemas/actionlist.json"
    },
    "#include": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "precacheTextures": {
      "type": "array",
      "items": {
        "title": "DataPath<UnityEngine.Texture2D>",
        "anyOf": [
          {
            "$ref": "/chippy-schema/schemas/datapath.json"
          }
        ]
      }
    },
    "keyframes": {
      "type": "array",
      "items": {
        "$ref": "/chippy-schema/schemas/bulletkeyframedata.json"
      }
    },
    "lifetime": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "shouldLoop": {
      "title": "ScriptFunc<System.Boolean>",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "despawnAfterKeyframes": {
      "description": "If true, bullet despawns as soon as it runs out of keyframes, regardless of its lifetime.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "sfxHitPlayer": {
      "$ref": "/chippy-schema/schemas/sfxident.json"
    },
    "sfxHitPixel": {
      "$ref": "/chippy-schema/schemas/sfxident.json"
    },
    "depthLevel": {
      "title": "ScriptFunc<SpaceUsurper.DepthLevel>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/depthlevel.json"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "startSpeed": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "mass": {
      "description": "How well the bullet resists being repelled (if unset, it defaults to 1).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "anchored": {
      "description": "Set this to true if something else moves this bullet (eg. parent pattern).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "shouldOverrideStatusEffect": {
      "description": "Decides if the current bullet should be overridden with a status effect.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "statusPaths": {
      "description": "The status effects that can be used to override.",
      "allOf": [
        {
          "type": "array",
          "items": {
            "title": "DataPath<SpaceUsurper.StatusEffectData>",
            "anyOf": [
              {
                "$ref": "/chippy-schema/schemas/statuseffectdata.json"
              },
              {
                "$ref": "/chippy-schema/schemas/datapath.json"
              }
            ]
          }
        }
      ]
    },
    "statusLevel": {
      "description": "The amount of status levels to add.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Int32>",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "statusCycleTime": {
      "description": "If this bullet has overridden statuses, this is the time to cycle between them.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "shapeType": {
      "$ref": "/chippy-schema/schemas/shapetype.json"
    },
    "spriteScale": {
      "description": "Extra scale for sprite.",
      "allOf": [
        {
          "title": "ScriptFunc<UnityEngine.Vector2>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/vector2.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "spriteForwardOffset": {
      "description": "Amount the sprite is adjusted in forward direction.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "extraFrameSize": {
      "description": "Number of extra spritesheet frames to use instead - (N+1)x(N+1) instead of 1x1.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Int32>",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "startMoveAngle": {
      "description": "Start with this move angle instead of moving in the pattern's current direction.",
      "allOf": [
        {
          "title": "ScriptFunc<SpaceUsurper.Rotation>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/rotation.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "startFacingAngle": {
      "description": "Start with this rotation instead of facing the current direction.",
      "allOf": [
        {
          "title": "ScriptFunc<SpaceUsurper.Rotation>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/rotation.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "impulseFrictionPercent": {
      "description": "How quickly the bullet slows down impulse velocity (default is 0.05).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "stopPatternsOnDespawn": {
      "description": "Whether anchored patterns stop when the bullet is finished.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "useAbsoluteAngles": {
      "description": "If true, don't add startAngle to keyframe angles.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "collideWithPixels": {
      "title": "ScriptFunc<System.Boolean>",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "collideInAllDirections": {
      "description": "If true, bullet rotates the direction it checks for collisions with pixels, and doesn't resolve visual overlaps (defaults to false). Used for turrets/drones/etc.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "ignorePlayerCollision": {
      "description": "Don't EVER collide with player - for when using bullet as visual effect, or when shot by player.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "useRawDeltaTime": {
      "description": "Ignore time-scaling.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "reflectLimit": {
      "description": "Number of times bullet can reflect before despawning automatically.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Int32>",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "quickReflect": {
      "description": "Reflect instantly instead of animating.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "despawnStyle": {
      "title": "ScriptFunc<SpaceUsurper.DespawnStyle>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/despawnstyle.json"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "despawnTime": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "force": {
      "description": "How much force it applies to pxcs it hits (also affected by pixelDamagePercent).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "noCollisionLeniency": {
      "description": "For small bullets, don't have a smaller hitbox than visuals when colliding with player.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "despawnOnPlayerHit": {
      "description": "Defaults to true.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "despawnWhenAllPatternsRemoved": {
      "description": "If true, this bullet despawns when all patterns added to it through Bullet.AddPattern have despawned. Defaults to false.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "despawnWhenAnyPatternsRemoved": {
      "description": "If true, this bullet despawns when any patterns added to it through Bullet.AddPattern has despawned. Defaults to false.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "isUnobtainable": {
      "description": "Used for status bullets - evaluated each frame and powerup cannot be collected while true.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "parallaxSpeed": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "cantBeDestroyed": {
      "title": "ScriptFunc<System.Boolean>",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "cantBeIgnored": {
      "description": "If true, player's IgnoreBulletDamage property won't prevent bullet's damage or `onHitPlayer` handler.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "borderWarningColor": {
      "description": "The color of the bullet when just out of camera bounds (uses current colorA when not set).",
      "allOf": [
        {
          "title": "ScriptFunc<UnityEngine.Color>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/color.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "borderWarningGlow": {
      "description": "How much the bullet glows when just out of camera bounds.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "borderWarningMinOpacity": {
      "description": "How opaque the edges of the border warning are.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "outOfBoundsRadiusFactor": {
      "description": "How far off camera until this bullet is removed (multiplied by out radius) (defaults to 4f). (also used for border warning range)",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "dontCheckBounds": {
      "description": "If true, don't disable this bullet based on being outside of arena.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "clampToBounds": {
      "description": "If true, force bullet to be inside its bounds.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "clampToBoundsVelocityDamping": {
      "description": "If clampToBounds is true, damping of 0 will not affect velocity of clamped bullets, 1 will remove it completely.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "colorBlinkEasingType": {
      "description": "Defaults to QuadInOut.",
      "allOf": [
        {
          "title": "ScriptFunc<SpaceUsurper.EasingType>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/easingtype.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "colorBlinkStartTime": {
      "description": "So that bullets in the same volley can have different color timing offsets.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "impactPattern": {
      "title": "DataPath<SpaceUsurper.PatternData>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/patterndata.json"
        },
        {
          "$ref": "/chippy-schema/schemas/datapath.json"
        }
      ]
    },
    "circleSkew": {
      "description": "Amount of skew (stretching in forward direction) when bullet traveling at max skew speed.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "circleSkewDist": {
      "description": "Distance (per fixed frame) required for full skew.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "circleSkewEasingType": {
      "title": "ScriptFunc<SpaceUsurper.EasingType>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/easingtype.json"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "changeTargetPlayerOnDeath": {
      "description": "In co-op, should this bullet pick a new target player if the old target dies.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "despawnOnDeath": {
      "description": "If true, despawn if target player dies.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "playerDamageDir": {
      "description": "When player is hit by this bullet, which direction should force be applied to player (by default, towards player, away from bullet center).",
      "allOf": [
        {
          "title": "ScriptFunc<UnityEngine.Vector2>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/vector2.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "autoUpdateTargetPlayer": {
      "type": "boolean"
    },
    "alwaysTargetClosestPlayer": {
      "type": "boolean"
    },
    "targetPlayerUpdatePeriod": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "isStrictlyVisual": {
      "description": "Can never be Affected, Repelled, Destroyed, etc. Use for background bullets or other visual effects.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "updateFloatVar": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "bulletArchetypeIgnoreOnUpdate": {
      "type": "boolean"
    },
    "proximityUnits": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "proximityRange": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "useLegacyDamage": {
      "description": "Only for old replay support.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "totalPixelDamage": {
      "description": "The max amount of damage this bullet can deal.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "partDamageFactor": {
      "description": "Damage multiplier when hitting a part instead of a single pixel (default is 1).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "shouldReflect": {
      "description": "If bullet should reflect when hitting a pixel.",
      "allOf": [
        {
          "title": "ScriptFunc<System.Boolean>",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "grazeSize": {
      "title": "ScriptFunc<System.Single>",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "pushStrength": {
      "description": "Amount of force the bullet applies against a grazing player (default is 0.4).",
      "allOf": [
        {
          "title": "ScriptFunc<System.Single>",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "flipX": {
      "title": "ScriptFunc<System.Boolean>",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "flipY": {
      "title": "ScriptFunc<System.Boolean>",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "isPlayerBullet": {
      "description": "Whether the bullet should be considered to be shot by the player.",
      "allOf": [
        {
          "type": "boolean"
        }
      ]
    },
    "debugVector": {
      "title": "ScriptFunc<UnityEngine.Vector2>",
      "anyOf": [
        {
          "$ref": "/chippy-schema/schemas/vector2.json"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "debugText": {
      "title": "ScriptFunc<System.String>",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "/chippy-schema/schemas/iscriptfunc.json"
        }
      ]
    },
    "minGrazeAngle": {
      "description": "TODO: only supported by BulletArchetype bullets.",
      "allOf": [
        {
          "title": "ScriptFunc<SpaceUsurper.Rotation>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/rotation.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    },
    "maxGrazeAngle": {
      "description": "TODO: only supported by BulletArchetype bullets.",
      "allOf": [
        {
          "title": "ScriptFunc<SpaceUsurper.Rotation>",
          "anyOf": [
            {
              "$ref": "/chippy-schema/schemas/rotation.json"
            },
            {
              "$ref": "/chippy-schema/schemas/iscriptfunc.json"
            }
          ]
        }
      ]
    }
  },
  "patternProperties": {
    "\\.sub$": {
      "$ref": "/chippy-schema/schemas/subroutinedata.json"
    },
    "[fF]sm$": {
      "$ref": "/chippy-schema/schemas/fsmdata.json"
    },
    "[bB]ullet$": {
      "$ref": "/chippy-schema/schemas/bulletdata.json"
    },
    "[pP]attern$": {
      "$ref": "/chippy-schema/schemas/patterndata.json"
    }
  }
}